{
    "controllerFull": {
        "prefix": "cfc",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async store(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async index(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async create(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async show(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async edit(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async update(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async destroy(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async view(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async grid(req, res) {",
            "    return res.json();",
            "  }",
            "",
            "  async form(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create resource controller"
    },
    "controllerStore": {
        "prefix": "cst",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async store(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with store method"
    },
    "controllerIndex": {
        "prefix": "cin",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async index(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with index method"
    },
    "controllerCreate": {
        "prefix": "ccr",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async create(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with create method"
    },
    "controllerShow": {
        "prefix": "csh",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async show(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with show method"
    },
    "controllerEdit": {
        "prefix": "ced",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async edit(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with edit method"
    },
    "controllerUpdate": {
        "prefix": "cup",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async update(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with update method"
    },
    "controllerDestroy": {
        "prefix": "cde",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async destroy(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with destroy method"
    },
    "controllerView": {
        "prefix": "cvi",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async view(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with view method"
    },
    "controllerGrid": {
        "prefix": "cgr",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async grid(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with grid method"
    },
    "controllerForm": {
        "prefix": "cfo",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}} {",
            "  async grid(req, res) {",
            "    return res.json();",
            "  }",
            "}",
            "",
            "export default new ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}();",
            ""
        ],
        "description": "Create controller with form method"
    },
    "methodStore": {
        "prefix": "st",
        "body": [
            "async store(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create store method"
    },
    "methodIndex": {
        "prefix": "in",
        "body": [
            "async index(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create index method"
    },
    "methodCreate": {
        "prefix": "cr",
        "body": [
            "async create(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Method create"
    },
    "methodShow": {
        "prefix": "sh",
        "body": [
            "async show(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create show method"
    },
    "methodEdit": {
        "prefix": "ed",
        "body": [
            "async edit(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create edit method"
    },
    "methodUpdate": {
        "prefix": "up",
        "body": [
            "async update(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create update method"
    },
    "methodDestroy": {
        "prefix": "dr",
        "body": [
            "async destroy(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create destroy method"
    },
    "methodView": {
        "prefix": "vi",
        "body": [
            "async view(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create view method"
    },
    "methodGrid": {
        "prefix": "gr",
        "body": [
            "async grid(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create grid method"
    },
    "methodForm": {
        "prefix": "fo",
        "body": [
            "async form(req, res) {",
            "  return res.json();",
            "}",
            ""
        ],
        "description": "Create form method"
    }
}
